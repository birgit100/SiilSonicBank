@using Open.Data.Bank
@using Open.Domain.Bank
@using Open.Sentry.Extensions
@inject SignInManager<ApplicationUser> SignInManager
@model Open.Core.IPaginatedList<Open.Facade.Bank.AccountView>

@{
    ViewData["Title"] = "SonicBank";
}

<div class="jumbotron">
    <h1>@ViewData["Title"]</h1>
    <img style="width: 100%; display: block;" src="/images/bankpikalt.jpg" alt="Bank image">
</div>

@if (!SignInManager.IsSignedIn(User) || Model == null)
{
    <div class="row">
        <div class="col-md-9">
            <h2>Welcome to SonicBank!</h2>
            <h3>Please log in to use our services!</h3>
        </div>
    </div>
}
else
{
        <div class="row">
            <div class="col-md-9">
                <h2>Welcome, @User.GetFirstName()!</h2>
                @if (Model.Count == 0)
                {
                    <a class="btn btn-outline-danger" style="border-radius: 0; font-weight: bold"
                       href="@Url.Action("Create", "BankAccount")">
                        CREATE YOUR FIRST ACCOUNT &raquo;
                    </a>
                }
                else
                {

                    <table style="width: 100%">
                        <thead>
                            <tr>
                                <th>Account Number</th>
                                <th>Type</th>
                                <th>Balance</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody id="accTable">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.ID)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Type)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Balance)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                    <td>
                                        <a class="btn btn-primary btn-sm"
                                           href="@Url.Action("Index", "Transaction", new { id = item.ID })">
                                            Transactions &raquo;
                                        </a>
                                    </td>
                                    <td>
                                        <a class="btn btn-primary btn-sm"
                                           href="@Url.Action("Create", "Transaction", new { senderId = item.ID })">
                                            New transaction &raquo;
                                        </a>
                                    </td>
                                    <td>
                                        <a class="btn btn-primary btn-sm"
                                           href="@Url.Action("Create", "Insurance", new { accountId = item.ID })">
                                            New Insurance &raquo;
                                        </a>
                                    </td>
                                    <td>
                                        <a class="btn btn-primary btn-sm"
                                           href="@Url.Action("Index", "Insurance", new { id = item.ID })">
                                            Account's Insurance &raquo;
                                        </a>
                                    </td>
                                </tr>
                            }
                    </table>
                    <a class="btn btn-outline-danger btn-sm" style="border-radius: 0; font-weight: bold " 
                       href="@Url.Action("Create", "BankAccount")">
                        CREATE AN OTHER ACCOUNT &raquo;
                    </a>
                }
            </div>
        </div>
        }
