@using Open.Core
@using Open.Data.Bank
@using Open.Sentry.Extensions
@inject SignInManager<ApplicationUser> SignInManager
@model Open.Core.IPaginatedList<Open.Facade.Bank.AccountView>

@{
    ViewData["Title"] = "SonicBank";
}
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        .collapsible {
            cursor: pointer;
            padding: 18px;
            width: 100%;
            border: none;
            text-align: left;
            outline: none;
            font-size: 15px;
        }

        .active, .collapsible:hover { background-color: #9cd7db; }

        .content {
            padding: 0 18px;
            display: none;
            overflow: hidden;
            background-color: #f1f1f1;
        }
    </style>
</head>

<div class="row">
    @if (!SignInManager.IsSignedIn(User) || Model == null) {
        <div class="col-md-12">
            <h2>Welcome to SonicBank!</h2>
            <h3>Please log in to use our services!</h3>
        </div>
    } else {
        <div class="col-md-12">
            <h2>Welcome, @User.GetFirstName()!</h2>
            @if (Model.Count == 0) {
                <a class="btn btn-outline-danger" style="font-weight: bold"
                   href="@Url.Action("Create", "BankAccount")">
                    Create your first account &raquo;
                </a>
            } else {
                <div>
                    <a class="btn btn-outline-danger btn-sm" style="font-weight: bold"
                       href="@Url.Action("Create", "BankAccount")">
                        Create new account &raquo;
                    </a>
                </div>
                <div style="overflow-x: auto;">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Account Number</th>
                            <th>Type</th>
                            <th>Balance</th>
                            <th>Status</th>
                            <th>Valid To</th>
                        </tr>
                        </thead>
                        <tbody id="accTable">
                        @foreach (var item in Model) {
                            <tr class="collapsible">
                                <td>
                                    <a href="@Url.Action("Index", "Transaction", new {id = item.ID})" style="font-weight: bold">
                                        @Html.DisplayFor(modelItem => item.ID)
                                    </a>
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                                <td>@Html.DisplayFor(modelItem => item.Balance)</td>
                                <td>
                                    @if (item.Status.Contains("expires")) {
                                        <span style="color: red;">@item.Status</span>
                                    } else {
                                        <span>@item.Status</span>
                                    }
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.ValidTo)</td>

                            </tr>
                            <tr class="content">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>
                                    <a class="btn btn-primary btn-sm"
                                       href="@Url.Action("Renew", "BankAccount", new {id = item.ID})">
                                        Renew &raquo;
                                    </a>
                                    @if (item.Status.Contains(Status.Active.ToString())) {
                                        <a class="btn btn-primary btn-sm"
                                           href="@Url.Action("Deactivate", "BankAccount", new {id = item.ID})">
                                            Deactivate &raquo;
                                        </a>
                                    }
                                </td>
                                <td></td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <script>
                    var coll = document.getElementsByClassName("collapsible");
                    var i;

                    for (i = 0; i < coll.length; i++) {
                        coll[i].addEventListener("click",
                            function() {
                                this.classList.toggle("active");
                                var content = this.nextElementSibling;
                                if (content.style.display === "table-row") {
                                    content.style.display = "none";
                                } else {
                                    content.style.display = "table-row";
                                }
                            });
                    }
                </script>
            }
        </div>
    }
</div>
