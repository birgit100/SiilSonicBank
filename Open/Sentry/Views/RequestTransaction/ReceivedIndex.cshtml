@using Open.Core
@using Open.Sentry.Extensions
@model Open.Core.IPaginatedList<Open.Facade.Bank.RequestTransactionView>

@{
    ViewBag.Title = "Received requests for " + ViewBag.BankAccountID;
    Layout = "_IndexPartial";
}

@section Create {
    <div class="form-group">
        <div class="control-label col-md-4" , style="font-weight: bold">Select Account</div>
        <div class="col-md-4">
            @using (Html.BeginForm("ReceivedIndex", "RequestTransaction"))
            {
                @Html.DropDownList("id", new SelectList(ViewBag.Accounts as IEnumerable<string>), new { @class = "form-control", onchange = "this.form.submit();" })
            }
        </div>
    </div>
    <a class="btn btn-primary btn-sm"
       href="@Url.Action("SentIndex", "RequestTransaction", new { id = ViewBag.BankAccountID })">
        Sent requests &raquo;
    </a>
}

<body>
    <table class="table">
        @{ var transaction = Model.FirstOrDefault();}
        <thead>
            <tr>
                @Html.SortColumnHeaderFor(x => transaction.ValidFrom, ViewData["SortValidFrom"])
                @Html.SortColumnHeaderFor(x => transaction.ReceiverAccountId, ViewData["SortReceiverAccount"])
                @Html.SortColumnHeaderFor(x => transaction.Explanation, ViewData["SortExplanation"])
                @Html.SortColumnHeaderFor(x => transaction.Amount, ViewData["SortAmount"])
                @Html.SortColumnHeaderFor(x => transaction.Status, ViewData["SortStatus"])
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ValidFrom)</td>
                    <td>
                        <b>
                            @Html.DisplayFor(modelItem => item.ReceiverAccount.AspNetUser.FirstName) @Html.DisplayFor(modelItem => item.ReceiverAccount.AspNetUser.LastName)
                        </b><br />
                        @Html.DisplayFor(modelItem => item.ReceiverAccountId)
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Explanation)</td>
                    <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                    <td>
                        <b>@Html.DisplayFor(modelItem => item.Status)</b>
                    </td>
                    <td>
                        @if (item.Status == TransactionStatus.Pending)
                        {
                            <a class="btn btn-primary btn-sm"
                               href="@Url.Action("ConfirmRequest", "RequestTransaction", new {id = item.ID})">
                                Confirm &raquo;
                            </a>
                            <a class="btn btn-primary btn-sm"
                               href="@Url.Action("DenyRequest", "RequestTransaction", new {id = item.ID})">
                                Deny &raquo;
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</body>
