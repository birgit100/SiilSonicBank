@using Open.Sentry.Extensions
@model Open.Core.IPaginatedList<Open.Facade.Bank.RequestTransactionView>

@{
    ViewBag.Title = "Sent requests from " + ViewBag.BankAccountID;
    Layout = "_IndexPartial";
}

@section Create {
    <a class="btn btn-primary btn-sm"
       href="@Url.Action("ReceivedIndex", "RequestTransaction", new { id = ViewBag.BankAccountID })">
        Received requests &raquo;
    </a>
    <a class="btn btn-primary btn-sm"
       href="@Url.Action("Create", "RequestTransaction", new { receiverId = ViewBag.BankAccountID })">
        New request &raquo;
    </a>
}

<body>
<table class="table">
    @{ var transaction = Model.FirstOrDefault();}
    <thead>
    <tr>
        @Html.SortColumnHeaderFor(x => transaction.ValidFrom, ViewData["SortValidFrom"])
        @Html.SortColumnHeaderFor(x => transaction.SenderAccountId, ViewData["SortSenderAccount"])
        @Html.SortColumnHeaderFor(x => transaction.Explanation, ViewData["SortExplanation"])
        @Html.SortColumnHeaderFor(x => transaction.Amount, ViewData["SortAmount"])
        @Html.SortColumnHeaderFor(x => transaction.Status, ViewData["SortStatus"])
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.ValidFrom)</td>
            <td>
                <b>
                    @Html.DisplayFor(modelItem => item.SenderAccount.AspNetUser.FirstName) @Html.DisplayFor(modelItem => item.SenderAccount.AspNetUser.LastName)
                </b><br />
                @Html.DisplayFor(modelItem => item.SenderAccountId)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Explanation)</td>
            <td>@Html.DisplayFor(modelItem => item.Amount)</td>
            <td>
                <b>@Html.DisplayFor(modelItem => item.Status)</b>
            </td>
        </tr>
    }
    </tbody>
</table>
</body>
