@using Open.Data.Bank
@using Open.Sentry.Extensions
@model Open.Core.IPaginatedList<Open.Facade.Notification.NotificationView>
@inject SignInManager<ApplicationUser> SignInManager

<script>
    //for trying to get "mark as read" to work without changing view
    $("#myLink").click(function(e){
        e.preventDefault();
        $.ajax({
            url:$(this).attr("href"),
            success: function(){
                alert("Value Added"); 
            }
        });
    });
</script>

@if (SignInManager.IsSignedIn(User))
{
    <div class="btn-group dropdown dropdown-notifications">
        <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" style="background-color:transparent">
            <i data-count="@NotificationsViewComponent.NotSeenCount" class="fa fa-bell notification-icon"></i>
            <span class="caret"></span>
        </button>

        <div class="dropdown-container dropdown-position-bottomright">
            <div class="dropdown-toolbar">
                <div class="dropdown-toolbar-actions">
                    <a href="@Url.Action("Index", "Notifications")"><i class="fa fa-search"></i> View All</a>
                </div>
                <h3 class="dropdown-toolbar-title">Recent Notifications  (@NotificationsViewComponent.NotSeenCount)</h3>
            </div>
            <ul class="dropdown-menu notifications">
                @foreach (var notification in Model)
                {
                    <li class="notification" style = @(notification.IsSeen == false ? "color:black" : "color:lightgrey")>
                        <div class="media">
                            @*<div class="media-left">
                                        <div class="media-object">
                                            <img data-src="holder.js/50x50?bg=cccccc" class="img-circle" alt="Name">
                                        </div>
                                    </div>*@
                            <div class="media-body">
                                <div>(@notification.ReceiverAccountId) <br /></div>
                                <strong class="notification-title">
                                    From: @notification.Sender.AspNetUser.FirstName @notification.Sender.AspNetUser.LastName</strong>
                                <p class="notification-desc">
                                    @notification.Message <br/>
                                    @Html.ActionLink("Mark as read", "ChangeSeenStatus", "Notifications", new {id = notification.ID}, new { id="myLink"})
                                        @*@if (@notification.IsSeen == true) {
                                            <div>Mark as unread</div>
                                        }
                                        else {
                                            <div> Mark as read</div>
                                        }*@
                                </p>
                                <div class="notification-meta">
                                    <small class="timestamp">@notification.ValidFrom.ToString() </small>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
}