@using Open.Data.Bank
@using Open.Sentry.Extensions
@model Open.Core.IPaginatedList<Open.Facade.Notification.NotificationView>
@inject SignInManager<ApplicationUser> SignInManager

@if (SignInManager.IsSignedIn(User)) {
    <div class="btn-group dropdown dropdown-notifications">
        <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" style="background-color: transparent">
            @if (NotificationsViewComponent.NotSeenCount != 0) {
                <i data-count="@NotificationsViewComponent.NotSeenCount" class="fa fa-bell notification-icon"></i>
            }
            else {
                <i class="fa fa-bell"></i>}
            <span class="caret"></span>
        </button>

        <div class="dropdown-container dropdown-position-bottomright">
            <div class="dropdown-toolbar">
                <div class="dropdown-toolbar-actions">
                    <a href="@Url.Action("Index", "Notifications")"><i class="fa fa-search"></i> View All</a>
                </div>
                <h3 class="dropdown-toolbar-title">Recent Notifications (@NotificationsViewComponent.NotSeenCount)</h3>
            </div>
            <ul class="dropdown-menu notifications">
                @if (Model.Any()) {
                    foreach (var notification in Model) {
                         <li class="notification" style=@(notification.IsSeen == false ? "color:black" : "color:lightgrey")>
                             <div class="media">
                                 @*<div class="media-left">
                                        <div class="media-object">
                                            <img data-src="holder.js/50x50?bg=cccccc" class="img-circle" alt="Name">
                                        </div>
                                    </div>*@
                                 <div class="media-body">
                                     <div>(@notification.ReceiverAccountId) <br/></div>
                                     <strong class="notification-title">
                                         From: @notification.Sender.AspNetUser.FirstName @notification.Sender.AspNetUser.LastName
                                     </strong>
                                     <p class="notification-desc">
                                         @notification.FormattedMessage <br />
                                         @Html.ActionLink(notification.IsSeen == true ? "Mark as unread" : "Mark as read", "ChangeSeenStatus", "Notifications", new { notificationId = notification.ID}, new {id = "preventRedirect"})
                                     </p>
                                     <div class="notification-meta">
                                         <small>@notification.ValidFrom.ToString() </small>
                                     </div>
                                 </div>
                             </div>
                         </li>
                     }
                }
                else { 
                    <li class="notification"> <div class="media">
                           <div class="media-body">
                               <p class="notification-desc">
                                   You have no notifications. 
                               </p>
                           </div>
                       </div>
                    </li>
                }
            </ul>
        </div>
    </div>
}
    
